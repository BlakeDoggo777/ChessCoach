###############################################################################
#                           Network configuration                             #
###############################################################################

[network]

training_network_name = "chesscoach1"
uci_network_name = "chesscoach1"

[[networks]]

    name = "chesscoach1"
    
    [networks.training]

    stages = [
        # Self-play
        { stage = "play", window_size_start = 12_500, window_size_finish = 1_000_000 },

        # Train supervised, self-play and commentary, teacher
        { stage = "train", target = "teacher", type = "supervised", window_size_start = 2_000_000, window_size_finish = 2_000_000 },
        { stage = "train", target = "teacher", type = "training", window_size_start = 12_500, window_size_finish = 1_000_000 },
        { stage = "train_commentary", target = "teacher", type = "supervised" },
        { stage = "save", target = "teacher" },

        # Distill supervised and self-play to student
        { stage = "train", target = "student", type = "supervised", window_size_start = 2_000_000, window_size_finish = 2_000_000 },
        { stage = "train", target = "student", type = "training", window_size_start = 12_500, window_size_finish = 1_000_000 },
        { stage = "save", target = "student" },

        # Strength test (STS rating, etc.)
        { stage = "strength_test", target = "teacher" },
        { stage = "strength_test", target = "student" },
    ]

[[networks]]

    name = "supervised1"
    
    [networks.training]

    stages = [
        # Train supervised, teacher
        { stage = "train", target = "teacher", type = "supervised", window_size_start = 2_000_000, window_size_finish = 2_000_000 },
        { stage = "save", target = "teacher" },

        # Strength test (STS rating, etc.)
        { stage = "strength_test", target = "teacher" },
    ]

[[networks]]

    name = "selfplay1"

    [networks.training]

    stages = [
        # Self-play
        { stage = "play", window_size_start = 12_500, window_size_finish = 1_000_000 },

        # Train self-play, teacher then distill
        { stage = "train", target = "teacher", type = "training", window_size_start = 12_500, window_size_finish = 1_000_000 },
        { stage = "save", target = "teacher" },
        { stage = "train", target = "student", type = "training", window_size_start = 12_500, window_size_finish = 1_000_000 },
        { stage = "save", target = "student" },

        # Strength test (STS rating, etc.)
        { stage = "strength_test", target = "teacher" },
        { stage = "strength_test", target = "student" },
    ]

[[networks]]

    name = "commentary1"
    
    [networks.training]

    stages = [
        # Train commentary, teacher
        { stage = "train_commentary", target = "teacher", type = "supervised" },
        { stage = "save", target = "teacher" },
    ]

[[networks]]

    name = "chesscoach-tiny1"

    [networks.training]

    steps = 100
    num_games = 100

    validation_interval = 50
    checkpoint_interval = 50
    strength_test_interval = 100

    stages = [
        # Self-play
        { stage = "play", window_size_start = 50, window_size_finish = 100 },

        # Train supervised, self-play and commentary, teacher
        { stage = "train", target = "teacher", type = "supervised", window_size_start = 100, window_size_finish = 100 },
        { stage = "train", target = "teacher", type = "training", window_size_start = 50, window_size_finish = 100 },
        { stage = "train_commentary", target = "teacher", type = "supervised" },
        { stage = "save", target = "teacher" },

        # Distill supervised and self-play to student
        { stage = "train", target = "student", type = "supervised", window_size_start = 100, window_size_finish = 100 },
        { stage = "train", target = "student", type = "training", window_size_start = 50, window_size_finish = 100 },
        { stage = "save", target = "student" },

        # Strength test (STS rating, etc.)
        { stage = "strength_test", target = "teacher" },
        { stage = "strength_test", target = "student" },
    ]

    [networks.self_play]

    num_workers = 2
    prediction_batch_size = 50

[[networks]]

    name = "supervised-tiny1"
    
    [networks.training]

    steps = 100
    num_games = 100

    validation_interval = 50
    checkpoint_interval = 50
    strength_test_interval = 100

    stages = [
        # Train supervised, teacher
        { stage = "train", target = "teacher", type = "supervised", window_size_start = 100, window_size_finish = 100 },
        { stage = "save", target = "teacher" },

        # Strength test (STS rating, etc.)
        { stage = "strength_test", target = "teacher" },
    ]

[[networks]]

    name = "selfplay-tiny1"

    [networks.training]

    steps = 100
    num_games = 100

    validation_interval = 50
    checkpoint_interval = 50
    strength_test_interval = 100

    stages = [
        # Self-play
        { stage = "play", window_size_start = 50, window_size_finish = 100 },

        # Train self-play, teacher then distill
        { stage = "train", target = "teacher", type = "training", window_size_start = 50, window_size_finish = 100 },
        { stage = "save", target = "teacher" },
        { stage = "train", target = "student", type = "training", window_size_start = 50, window_size_finish = 100 },
        { stage = "save", target = "student" },

        # Strength test (STS rating, etc.)
        { stage = "strength_test", target = "teacher" },
        { stage = "strength_test", target = "student" },
    ]

    [networks.self_play]

    num_workers = 2
    prediction_batch_size = 50

###############################################################################
#     Default training and self-play configuration. Networks can override.    #
###############################################################################

[training]

architecture = "conv2d"
batch_size = 512
commentary_batch_size = 256
steps = 160_000
pgn_interval = 100
validation_interval = 100
checkpoint_interval = 1000
strength_test_interval = 5000
num_games = 2_000_000
value_loss_weight = 0.1
mcts_value_loss_weight = 0.015
policy_loss_weight = 1.0
reply_policy_loss_weight = 0.15
momentum = 0.9
vocabulary_filename = "vocabulary.txt"
games_path_supervised = "Games/Supervised"
games_path_training = "Games/Training"
games_path_validation = "Games/Validation"
commentary_path_supervised = "Data/Commentary"
commentary_path_training = ""
commentary_path_validation = ""
stages = []

[training.learning_rate_schedule]

steps = [0, 40_000, 80_000, 120_000]
rates = [1e-2, 1e-3, 1e-4, 1e-5]

[training.commentary_learning_rate_schedule]

steps = [0, 40_000, 80_000, 120_000]
rates = [1e-4, 1e-5, 1e-6, 1e-7]

[self_play]

num_workers = 4
prediction_batch_size = 256

num_sampling_moves = 30
max_moves = 512
num_simulations = 800

root_dirichlet_alpha = 0.3
root_exploration_fraction = 0.25

exploration_rate_base = 19652.0
exploration_rate_init = 1.25

###############################################################################
#                       Miscellaneous configuration                           #
###############################################################################

[prediction_cache]

size_gb = 8
max_ply = 24

[time_control]

safety_buffer_ms = 500
fraction_remaining = 20

[search]

mcts_parallelism = 16

[storage]

max_games_per_file = 2000

[paths]

networks = "Networks"
tensorboard = "TensorBoard"
logs = "Logs"
pgns = "Pgns"

###############################################################################