PUCT - medium confidence
- try prior temperature
- try killer heuristic for mate-in-N/syzygy lower bound
- try value stddev

Optimization
- finish batched/parallelized ask/tell once training finished
- A/B-test threads/parallelism, and slowstart settings
- A/B-test cache-as-TT with/without repetition state and/or no-progress count (bucketed?)
- long optimization, tournament mode, 30s per move (needs distributed) - include cpuct
- final optimization with just move diversity parameters (consider adding visit%/upweight% threshold) - 30s per move
- deep tournaments, calculate ratings vs. various engines, CC with AZ-PUCT, etc., with various time controls - keep PGNs

Deployment
- bot - cancel unanswered challenges after a timeout
- re-test on fresh VMs
	- test without any virtual env on windows too, and with non-conda venv
- need to add (tensorflow-text + sentencepiece + tf-models-official) to prepare.sh, etc., once TPU VM fixes are deployed
- installers, instructions, progress indicators, error handling, etc.
- linux unit test script
- add windows command line build script, binplace somewhere cleanly

Measurements
- Tournament Elo across training history (teacher/student, all SWA, every 400k)
- Controlled NPS (fixed movetime, multiple trials) (cache/no, teacher/student, TPU/GPU)
- Self-play games/hour steady-state (from 10 chunks to 20 chunks or w/e) (cache/no, teacher/student, TPU/GPU)
- Training time per checkpoint for main model and commentary (TPU/GPU)
- Test suite results (STS, Arasan21) (teacher/student, TPU/GPU)

Publishing
- write-ups
- final network weights
- datasets? check costs